Distributed Web Infrastructure

This task involves designing a web infrastructure with three servers hosting the website www.foobar.com, enhancing the basic infrastructure to improve reliability, scalability, and load balancing.

Additions and explanations:

    2 additional servers: Increases processing capacity and redundancy to reduce single points of failure.
    Web server (Nginx) and Application server: As in the first task, but deployed in a distributed manner for better performance and reliability.
    1 load balancer (HAproxy): Distributes incoming requests among the servers to balance the load and increase availability. It acts as a traffic cop, directing client requests to the best available server based on the chosen distribution algorithm.
    Set of application files (codebase): Distributed across servers to ensure content consistency and availability.
    Database (MySQL) with a Primary-Replica setup: Improves data availability and read capacity. The primary server handles all write operations while replicas serve read requests, enhancing performance and data redundancy.

Specifics about the infrastructure:

    Adding elements for redundancy and scalability: Each additional component, like the load balancer and database replicas, is introduced to distribute traffic evenly, prevent downtime, and ensure data consistency and availability.
    Load balancer distribution algorithm: Common algorithms include round-robin, least connections, and IP hash. The choice depends on the desired balance between even distribution and session persistence.
    Active-Active vs. Active-Passive load balancing: Active-Active setups distribute traffic across multiple servers, all of which are handling requests. Active-Passive setups have standby servers that only take over if the primary server fails, providing a failover mechanism.
    Database Primary-Replica cluster: This setup allows for one primary (master) server that handles writes and multiple replicas (slaves) that handle reads, improving read scalability and data redundancy. In case of primary failure, a replica can be promoted to maintain availability.

Issues with this infrastructure:

    SPOF identification: While redundancy is improved, single points of failure can still exist, such as a single load balancer or a primary database server without a failover mechanism.
    Security concerns: Without firewalls or encrypted connections (HTTPS), the infrastructure is vulnerable to attacks.
    Lack of monitoring: Without proper monitoring tools, it's challenging to detect and address performance bottlenecks, security breaches, and system failures in a timely manner.

This setup aims to provide a more resilient and scalable infrastructure compared to a single-server setup, addressing some of the basic infrastructure's limitations while introducing new components to manage traffic and data more effectively.
