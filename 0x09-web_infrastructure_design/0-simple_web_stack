Simple Web Infrastructure

The goal is to design a basic web infrastructure on a single server hosting a site accessible via www.foobar.com. Here are the details for each required component:

    1 server: This is the physical or virtual machine running the software necessary to make the website accessible on the Internet.
    1 web server (Nginx): Nginx is the software that listens for HTTP/HTTPS requests and serves static files or forwards dynamic requests to the application server. It acts as the entry point for user requests.
    1 application server: It runs the web application, processing dynamic content by interacting with the database and generating web pages on the fly in response to user requests.
    Application files (codebase): This represents the source code of the web application, including both the backend (application logic, database interaction) and the frontend (HTML, CSS, JavaScript).
    1 database (MySQL): Stores the data necessary for the web application's operation, such as user information, product data, etc. The application server queries the database to retrieve or store information in response to user actions.
    1 domain name (foobar.com): The web address users enter in their browser to access the site. A DNS A record points the domain (www.foobar.com) to the server's IP address (8.8.8.8).

Infrastructure Specifics and Issues

    What is a server? It's a machine that provides data or services to other computers on a network.
    Role of the domain name: It facilitates access to the website by allowing users to enter an easy-to-remember address (www.foobar.com) instead of an IP address.
    Type of DNS record for WWW: It's a subdomain (www) pointing to the server where the site is hosted. It typically uses an A or CNAME record.
    Role of the web server: It serves static files to users and forwards dynamic requests to the application server.
    Role of the application server: It processes dynamic requests, interacts with the database, and generates dynamic content.
    Role of the database: It stores and manages data necessary for the web application's operation.
    Communication with the user's computer: The server communicates with the user's computer over the Internet, using the HTTP/HTTPS protocol.

Issues

    SPOF (Single Point Of Failure): The entire system relies on a single server, so if this server fails, the entire site becomes inaccessible.
    Maintenance and updates: The need to restart the server for updates can lead to periods of unavailability.
    Scalability: If the site receives too much traffic, a single server may not be capable of handling the load, leading to reduced performance or a crash.
